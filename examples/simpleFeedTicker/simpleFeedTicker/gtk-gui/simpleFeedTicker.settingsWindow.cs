
// This file has been generated by the GUI designer. Do not modify.
namespace simpleFeedTicker
{
	public partial class settingsWindow
	{
		private global::Gtk.Fixed fixed1;

		private global::Gtk.Entry entry1;

		private global::Gtk.Label label1;

		private global::Gtk.Button button1;

		private global::Gtk.Button button2;

		private global::Gtk.Label label2;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget simpleFeedTicker.settingsWindow
			this.Name = "simpleFeedTicker.settingsWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("Settings");
			this.Icon = global::Stetic.IconLoader.LoadIcon (this, "gtk-properties", global::Gtk.IconSize.Menu);
			this.TypeHint = ((global::Gdk.WindowTypeHint)(1));
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			this.Modal = true;
			this.Resizable = false;
			this.AllowGrow = false;
			// Container child simpleFeedTicker.settingsWindow.Gtk.Container+ContainerChild
			this.fixed1 = new global::Gtk.Fixed ();
			this.fixed1.Name = "fixed1";
			this.fixed1.HasWindow = false;
			// Container child fixed1.Gtk.Fixed+FixedChild
			this.entry1 = new global::Gtk.Entry ();
			this.entry1.WidthRequest = 282;
			this.entry1.CanFocus = true;
			this.entry1.Name = "entry1";
			this.entry1.IsEditable = true;
			this.entry1.InvisibleChar = '‚óè';
			this.fixed1.Add (this.entry1);
			global::Gtk.Fixed.FixedChild w1 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.entry1]));
			w1.X = 108;
			w1.Y = 7;
			// Container child fixed1.Gtk.Fixed+FixedChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("URL of the feed");
			this.fixed1.Add (this.label1);
			global::Gtk.Fixed.FixedChild w2 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.label1]));
			w2.X = 16;
			w2.Y = 10;
			// Container child fixed1.Gtk.Fixed+FixedChild
			this.button1 = new global::Gtk.Button ();
			this.button1.WidthRequest = 60;
			this.button1.CanFocus = true;
			this.button1.Name = "button1";
			this.button1.UseUnderline = true;
			this.button1.Label = global::Mono.Unix.Catalog.GetString ("OK");
			this.fixed1.Add (this.button1);
			global::Gtk.Fixed.FixedChild w3 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.button1]));
			w3.X = 328;
			w3.Y = 244;
			// Container child fixed1.Gtk.Fixed+FixedChild
			this.button2 = new global::Gtk.Button ();
			this.button2.WidthRequest = 60;
			this.button2.CanFocus = true;
			this.button2.Name = "button2";
			this.button2.UseUnderline = true;
			this.button2.Label = global::Mono.Unix.Catalog.GetString ("Abort");
			this.fixed1.Add (this.button2);
			global::Gtk.Fixed.FixedChild w4 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.button2]));
			w4.X = 4;
			w4.Y = 244;
			// Container child fixed1.Gtk.Fixed+FixedChild
			this.label2 = new global::Gtk.Label ();
			this.label2.WidthRequest = 376;
			this.label2.Name = "label2";
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Just a feed ticker has been developed by Michael Schwarz. It is licensed under the terms of GNU GPL v3 or (at your option) any later version of this license.\nThe main purpose of this piece of software is to illustrate how dotFeedLib works on Mono (GNU/Linux).\nTo find out more about dotFeedLib visit the project webpage at:\nhttp://dotfeedlib.sourceforge.net/.\n");
			this.label2.Wrap = true;
			this.label2.Justify = ((global::Gtk.Justification)(3));
			this.fixed1.Add (this.label2);
			global::Gtk.Fixed.FixedChild w5 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.label2]));
			w5.X = 10;
			w5.Y = 84;
			this.Add (this.fixed1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 399;
			this.DefaultHeight = 303;
			this.Show ();
			this.button1.Clicked += new global::System.EventHandler (this.OnButton1Clicked);
			this.button2.Clicked += new global::System.EventHandler (this.OnButton2Clicked);
		}
	}
}
